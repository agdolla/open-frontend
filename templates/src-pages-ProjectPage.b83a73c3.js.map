{"version":3,"sources":["webpack:////Users/treyhuffine/postmates/open-frontend/src/components/PageMeta/index.tsx","webpack:////Users/treyhuffine/postmates/open-frontend/src/components/Animation/styles.ts","webpack:////Users/treyhuffine/postmates/open-frontend/src/components/Animation/index.tsx","webpack:////Users/treyhuffine/postmates/open-frontend/src/utils/helpers.ts","webpack:////Users/treyhuffine/postmates/open-frontend/src/style/mixins/breakpoints.ts","webpack:////Users/treyhuffine/postmates/open-frontend/src/style/variables/breakpoints.ts","webpack:////Users/treyhuffine/postmates/open-frontend/src/style/mixins/spacing.ts","webpack:////Users/treyhuffine/postmates/open-frontend/src/utils/types.ts","webpack:////Users/treyhuffine/postmates/open-frontend/src/components/Header/styles.ts","webpack:////Users/treyhuffine/postmates/open-frontend/src/components/Header/index.tsx","webpack:////Users/treyhuffine/postmates/open-frontend/src/utils/color.ts","webpack:////Users/treyhuffine/postmates/open-frontend/src/components/Navbar/styles.ts","webpack:////Users/treyhuffine/postmates/open-frontend/src/components/Navbar/index.tsx","webpack:////Users/treyhuffine/postmates/open-frontend/src/components/Project/styles.ts","webpack:////Users/treyhuffine/postmates/open-frontend/src/components/Project/index.tsx","webpack:////Users/treyhuffine/postmates/open-frontend/src/components/ProjectList/styles.ts","webpack:////Users/treyhuffine/postmates/open-frontend/src/components/ProjectList/index.tsx","webpack:////Users/treyhuffine/postmates/open-frontend/src/style/elements/index.ts","webpack:////Users/treyhuffine/postmates/open-frontend/src/pages/ProjectPage.tsx"],"names":["PageMeta","_ref","title","description","url","siteRoot","image","concat","react","lib","name","content","property","Wrapper","styled","target","marginTop","rotate","keyframes","Cube","_ref2","time","Front","Back","Right","Left","Top","Bottom","Animation","_ref$time","_ref$marginTop","is","undef","v","notUndef","func","_func","_x","apply","this","arguments","toString","f","number","n","string","s","array","Array","isArray","object","obj","_typeof","promise","p","then","instanceOf","c","toNum","strOrNum","parseFloat","isBreakpoint","start","end","Breakpoint","_classCallCheck","min","bp","max","above","bound","inclusive","length","undefined","breakpoint","below","GUTTER_TYPES","mobile","tablet","desktop","Meta","Teams","getGutter","type","PADDING","css","spacing","sm","md","lg","gutter","maxContentWidth","Content","Title","fonts","s72","bold","Description","s14","regular","Colors","Black","TextWrapper","ImageWrapper","Header","styles_Wrapper","src","alt","components_Animation","hashSignRegExp","parseToRgb","color","hex","replace","factor","repeat","parseInt","slice","rgba","alpha","_parseToRgb2","_slicedToArray","r","g","b","Nav","LightGrey","List","Item","StyledLink","Link","activeRoute","HighlighterYellow","_ref3","DarkGreyMedium","_ref4","Navbar","es","location","to","pathname","Object","keys","map","team","teamSlug","toLowerCase","key","ExternalLink","White","isFeatured","Image","s32","Details","s11","Language","Team","Spacer","s18","Project","language","img","website","github","link","href","Project_styles_Wrapper","styles_Content","styles_Title","styles_Description","ProjectList","projects","ProjectList_styles_Wrapper","styles_List","components_Project","_extends","PageContainer","withRouteData","_ref$projects","components_PageMeta","components_Header","components_Navbar","components_ProjectList"],"mappings":"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","file":"templates/src-pages-ProjectPage.b83a73c3.js","sourcesContent":["import * as React from 'react';\nimport { Head } from 'react-static';\n\nconst TWITTER_USERNAME = '@Postmates';\n\ninterface Props {\n  title: string;\n  description: string;\n  url: string;\n  siteRoot: string;\n}\n\nconst PageMeta: React.FC<Props> = ({ title, description, url, siteRoot }) => {\n  const image = `${siteRoot}/dev-logo.png`;\n  return (\n    <Head>\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n\n      {/* Facebook */}\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:url\" content={url} />\n\n      {/* Twitter */}\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={description} />\n      <meta name=\"twitter:creator\" content={TWITTER_USERNAME} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:image\" content={image} />\n      <meta name=\"twitter:site\" content={TWITTER_USERNAME} />\n    </Head>\n  );\n};\n\nexport default PageMeta;\n","import styled, { keyframes } from 'react-emotion';\n\nexport const Wrapper = styled.div<{ marginTop: number; }>`\n  perspective: 1000px;\n  perspective-origin: 50% 50%;\n  padding-top: 80px;\n  margin-top: ${({ marginTop }) => marginTop}px\n`;\n\nconst rotate = keyframes`\n  from {\n    transform: rotateX(0deg) rotateY(0deg);\n  }\n\n  to {\n    transform: rotateX(360deg) rotateY(360deg);\n  }\n`;\n\nexport const Cube = styled.div<{ time: number; }>`\n  margin: auto;\n  position: relative;\n  height: 200px;\n  width: 200px;\n  transform-style: preserve-3d;\n  animation: ${rotate} ${({ time }) => time}s infinite linear;\n\n  div {\n    position: absolute;\n    padding: 10px;\n    box-sizing: border-box;\n    height: 100%;\n    width: 100%;\n    opacity: 1;\n    background-color: transparent;\n    border: solid 1px #000;\n  }\n`;\n\nexport const Front = styled.div`\n  transform: translateZ(100px);\n`;\n\nexport const Back = styled.div`\n  transform: translateZ(-100px) rotateY(180deg);\n`;\n\nexport const Right = styled.div`\n  transform: rotateY(-270deg) translateX(100px);\n  transform-origin: top right;\n`;\n\nexport const Left = styled.div`\n  transform: rotateY(270deg) translateX(-100px);\n  transform-origin: center left;\n`;\n\nexport const Top = styled.div`\n  transform: rotateX(-270deg) translateY(-100px);\n  transform-origin: top center;\n`;\n\nexport const Bottom = styled.div`\n  transform: rotateX(270deg) translateY(100px);\n  transform-origin: bottom center;\n`;\n","import * as React from 'react';\n\nimport { Wrapper, Cube, Front, Back, Top, Bottom, Left, Right } from './styles';\n\nconst Animation = ({ time = 60, marginTop = 0 }) => (\n  <Wrapper marginTop={marginTop}>\n    <Cube time={time}>\n      <Front />\n      <Back />\n      <Top />\n      <Bottom />\n      <Left />\n      <Right />\n    </Cube>\n  </Wrapper>\n);\n\nexport default Animation;\n","import { isArray, isObject, mapValues } from 'lodash';\n\ntype func = () => any;\n\nexport const is = {\n  undef: (v: any): v is undefined => v === null || v === undefined,\n  notUndef: (v: any) => v !== null && v !== undefined,\n  func: (f: any): f is func => typeof f === 'function',\n  number: (n: any): n is number => typeof n === 'number',\n  string: (s: any): s is string => typeof s === 'string',\n  array: Array.isArray,\n  object: (obj: any): obj is object => obj && !is.array(obj) && typeof obj === 'object',\n  promise: (p: any): p is Promise<any> => p && is.func(p.then),\n  instanceOf: (c: any, p: any) => c && p && c instanceof p,\n};\n\nexport const once = (() => (\n  (cb) => {\n    let count = 0;\n    return (...args) => {\n      if (count === 0) {\n        count += 1;\n        return cb(...args);\n      }\n    };\n  }\n))();\n\n/*\n * Clones any object and recursively replaces null with undefined\n */\nexport const mapNullToUndefined = (o: any) => {\n  if (!isObject(o)) {\n    return o === null ? undefined : o;\n  }\n\n  return mapValues(o, (v) => {\n    if (isArray(v)) {\n      return (v as any[]).map(av => mapNullToUndefined(av));\n    } else if (isObject(v)) {\n      return mapNullToUndefined(v);\n    }\n    return v === null ? undefined : v;\n  });\n};\n\nexport const noop = (..._: any[]): void => {};\n\nexport const convertNameToSlug = name => name.toLowerCase().replace(' ', '-');\n","import { is } from 'utils/helpers';\n\nconst toNum = (strOrNum: string | number): number => parseFloat(strOrNum as string);\n\ntype MediaQuery = string;\n\nconst isBreakpoint = (\n  start: string | Nullable<number>,\n  end?: string | Nullable<number>,\n): any => !!(start || end);\n\nconst isMediaQuery = (mediaQuery: MediaQuery): any => /^@media/.test(mediaQuery);\n\nexport class Breakpoint {\n  start: Nullable<number>;\n  end: Nullable<number>;\n  constructor(start: Nullable<number>, end: Nullable<number>) {\n    isBreakpoint(start, end);\n    this.start = start;\n    this.end = end;\n  }\n}\n\nconst min = (bp: number): MediaQuery => `@media screen and (min-width: ${bp}px)`;\nconst max = (bp: number): MediaQuery => `@media screen and (max-width: ${bp}px)`;\nconst btw = (lower: number, upper: number): MediaQuery =>\n  `@media screen and (min-width: ${lower}px) and (max-width: ${upper}px)`;\n\n// Inverts a media query @media --> @media not or\n// @media not --> @media\nfunction invert(mediaQuery: MediaQuery = ''): MediaQuery {\n  isMediaQuery(mediaQuery);\n  if (!/^@media not/.test(mediaQuery)) {\n    return mediaQuery.replace('@media', '@media not');\n  }\n  return mediaQuery.replace('@media not', '@media');\n}\n\n// Given two breakpoints (null, 715) and (716, 1024) this will\n// return a new merged breakpoint of (null, 1024)\nfunction mergeBps(bps: Breakpoint[]): Breakpoint {\n  const starts: any[] = [];\n  const ends: any[] = [];\n\n  bps.forEach((bp) => {\n    starts.push(bp.start);\n    ends.push(bp.end);\n  });\n\n  starts.sort((a, b) => a - b);\n  ends.sort((a, b) => a - b);\n  const merged = new Breakpoint(starts[0], ends[ends.length - 1]);\n\n  if (starts.includes(null)) merged.start = null;\n  if (ends.includes(null)) merged.end = null;\n  return new Breakpoint(merged.start, merged.end);\n}\n\n// Returns a media query above the specified breakpoint\n// By defauly inclusive is false\nfunction above(\n  bp: Breakpoint | string | number,\n  inclusive: boolean = false,\n): MediaQuery {\n  let bound: number;\n  if (is.instanceOf(bp, Breakpoint)) {\n    bound = (bp as Breakpoint).end! + 1;\n  } else {\n    const breakpoint = toNum(bp as string | number);\n    bound = inclusive ? breakpoint : breakpoint + 1;\n  }\n\n  return min(bound);\n}\n\n// Returns a media query above the specified breakpoint\n// By default inclusive is false\nfunction below(\n  bp: Breakpoint | string | number,\n  inclusive: boolean = false,\n): MediaQuery {\n  let bound;\n  if (is.instanceOf(bp, Breakpoint)) {\n    bound = (bp as Breakpoint).start! - 1;\n  } else {\n    const breakpoint = toNum(bp as string | number);\n    bound = inclusive ? breakpoint : breakpoint - 1;\n  }\n\n  return max(bound);\n}\n\n// Returns a media query between specified values\n// By default, inclusive is true\nfunction between(\n  lower: Breakpoint | string | number,\n  upper: Breakpoint | string | number,\n  inclusive: boolean = true,\n): MediaQuery {\n  let bounds;\n  if (is.instanceOf(lower, Breakpoint) && is.instanceOf(upper, Breakpoint)) {\n    bounds = [(lower as Breakpoint).start, (upper as Breakpoint).end];\n  } else {\n    bounds = [lower, upper];\n  }\n\n  if (!inclusive) {\n    bounds[0] += bounds[0];\n    bounds[1] -= bounds[1];\n  }\n\n  return btw(bounds[0], bounds[1]);\n}\n\nfunction at(...bps: Breakpoint[]): MediaQuery {\n  let bp;\n\n  bps.forEach(bp => isBreakpoint(bp.start, bp.end));\n  if (bps.length > 1) {\n    bp = mergeBps(bps);\n  } else {\n    bp = bps[0];\n  }\n\n  if (!bp.start && bp.end) return below(bp.end, true);\n  if (bp.start && !bp.end) return above(bp.start, true);\n  return between(bp.start, bp.end);\n}\n\n// Can either pass in a breakpoint or a media query to invert it\nfunction not(\n  bp: Breakpoint | string | number,\n) {\n  if (is.instanceOf(bp, Breakpoint)) {\n    return invert(at(bp as Breakpoint));\n  }\n\n  isMediaQuery(bp as string);\n  return invert(bp as string);\n}\n\nexport {\n  above,\n  below,\n  between,\n  at,\n  not,\n};\n","import { Breakpoint } from 'style/mixins/breakpoints';\n\n// Application breakpoints\nexport const xs = new Breakpoint(null, 414);\nexport const mobile = new Breakpoint(null, 767);\nexport const tablet = new Breakpoint(768, 1060);\nexport const desktop = new Breakpoint(1060, null);\nexport const xl = new Breakpoint(1500, null);\n","import { css } from 'react-emotion';\nimport { mobile, tablet, desktop } from 'style/variables/breakpoints';\nimport { above, Breakpoint } from 'style/mixins/breakpoints';\nimport spacing from 'style/variables/spacing';\n\nenum GUTTER_TYPES {\n  PADDING = 'padding',\n  MARGIN = 'margin',\n}\n\nconst getGutter = (bp: Breakpoint = desktop, type = GUTTER_TYPES.PADDING) => {\n  if (bp === mobile) {\n    return css`\n      ${type}-left: ${spacing.sm};\n      ${type}-right: ${spacing.sm};\n    `;\n  }\n  if (bp === tablet) {\n    return css`\n      ${type}-left: ${spacing.md};\n      ${type}-right: ${spacing.md};\n    `;\n  }\n  return css`\n    ${type}-left: ${spacing.lg};\n    ${type}-right: ${spacing.lg};\n  `;\n};\n\nexport const gutter = css`\n  ${getGutter(mobile)};\n\n  ${above(mobile)} {\n    ${getGutter(tablet)};\n  }\n\n  ${above(tablet)} {\n    padding-left: 0;\n    padding-right: 0;\n  }\n`;\n\nexport const responsivePadding = css`\n  padding: ${spacing.sm};\n\n  ${above(mobile)} {\n    padding: ${spacing.md};\n  }\n\n  ${above(tablet)} {\n    padding: ${spacing.lg};\n  }\n`;\n\nexport const maxContentWidth = css`\n  max-width: 1080px;\n  width: 100%;\n  margin: 0 auto;\n`;\n","export enum Meta {\n  Title = 'Postmates Open Source',\n  Description = 'Open source software at Postmates.',\n}\n\nexport interface Language {\n  name: string;\n  color: string;\n}\n\nexport interface Project {\n  title: string;\n  description: string;\n  language: Language;\n  team: string;\n  github?: string;\n  website?: string;\n  img?: string;\n  slug?: string;\n  isFeatured?: boolean;\n}\n\nexport enum Teams {\n  Frontend = 'Frontend',\n  Infrastructure = 'Infrastructure',\n  Android = 'Android',\n  iOS = 'iOS',\n  Data = 'Data',\n}\n","import styled from 'react-emotion';\nimport fonts from 'style/fonts';\nimport { Colors } from 'style/variables/palette';\nimport { below } from 'style/mixins/breakpoints';\nimport { tablet } from 'style/variables/breakpoints';\nimport { gutter, maxContentWidth } from 'style/mixins/spacing';\n\nexport const Wrapper = styled.div`\n  ${gutter};\n  ${maxContentWidth};\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  padding-bottom: 80px;\n\n  ${below(tablet)} {\n    flex-direction: column;\n  }\n`;\n\nexport const Title = styled.h1`\n  ${fonts.s72.bold};\n  margin-top: 20px;\n  margin-bottom: 12px;\n`;\n\nexport const Description = styled.p`\n  ${fonts.s14.regular};\n  color: ${Colors.Black};\n  line-height: 1.56;\n  padding-right: 40px;\n`;\n\nexport const TextWrapper = styled.div`\n  padding-right: 12px;\n\n  ${below(tablet)} {\n    padding-right: 0;\n  }\n`;\n\nexport const ImageWrapper = styled.div`\n  width: 600px;\n  position: relative;\n\n  ${below(tablet)} {\n    text-align: center;\n    margin-top: 28px;\n    margin-bottom: 12px;\n    margin-left: auto;\n    margin-right: auto;\n    width: 100%;\n  }\n`;\n","import * as React from 'react';\nimport Animation from 'components/Animation';\n\nimport { Wrapper, Content, Title, Description, TextWrapper, ImageWrapper } from './styles';\n\nconst Header = () => (\n  <Wrapper>\n    <Content>\n      <TextWrapper>\n        <img src=\"/images/logo.svg\" alt=\"postmates\" />\n        <Title>Postmates <br /> Open Source</Title>\n        <Description>\n           We love open-source software. Check out some of the projects we've shared with the community.\n        </Description>\n      </TextWrapper>\n      <ImageWrapper>\n        <Animation time={60} />\n        <Animation time={20} marginTop={-280} />\n      </ImageWrapper>\n    </Content>\n  </Wrapper>\n);\n\nexport default Header;\n","const hashSignRegExp = /^#/;\n\nconst parseToRgb = (color: string) => {\n  const hex = color.replace(hashSignRegExp, '');\n\n  const factor = hex.length / 3;\n  const repeat = 3 - factor;\n\n  const r = parseInt(hex.slice(0, 1 * factor).repeat(repeat), 16);\n  const g = parseInt(hex.slice(1 * factor, 2 * factor).repeat(repeat), 16);\n  const b = parseInt(hex.slice(2 * factor, 3 * factor).repeat(repeat), 16);\n\n  return [r, g, b];\n};\n\nconst toZeroOneRange = (eightBitValue: number) => eightBitValue / 255;\nconst toRelativeLuminance = (channel: number) =>\n  (channel <= 0.03928 ? (channel / 12.92) : ((channel + 0.055) / 1.055) ** 2.4);\n\n// https://www.w3.org/TR/WCAG20/#relativeluminancedef\nconst getLuminance = (color: string) => {\n  const [r, g, b] = parseToRgb(color).map(toZeroOneRange).map(toRelativeLuminance);\n\n  return (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n};\n\nexport const rgba = (color: string, alpha?: number) => {\n  const [r, g, b] = parseToRgb(color);\n  return `rgba(${r}, ${g}, ${b}, ${alpha !== undefined ? alpha : 1})`;\n};\n\nexport const isDark = (color: string) => (getLuminance(color) <= 0.179);\n","import styled from 'react-emotion';\nimport { Link } from '@reach/router';\nimport fonts from 'style/fonts';\nimport { Colors } from 'style/variables/palette';\nimport { rgba } from 'utils/color';\nimport { maxContentWidth } from 'style/mixins/spacing';\nimport { below } from 'style/mixins/breakpoints';\nimport { tablet, desktop } from 'style/variables/breakpoints';\nimport spacing from 'style/variables/spacing';\n\n// TODO: Add sticky and update styles if applied\n// https://developers.google.com/web/updates/2017/09/sticky-headers\nexport const Nav = styled.nav`\n  ${maxContentWidth};\n  border-bottom: 1px solid ${rgba(Colors.LightGrey, 0.5)};\n\n  ${below(desktop)} {\n    padding-left: ${spacing.md};\n    padding-right: ${spacing.md};\n  }\n\n  ${below(tablet)} {\n    padding-left: ${spacing.sm};\n    padding-right: ${spacing.sm};\n  }\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  padding: 0;\n  margin: 0;\n  margin-bottom: -1px;\n  overflow-x: scroll;\n`;\n\nexport const Item = styled.li`\n  align-items: center;\n  margin-right: 32px;\n  white-space: nowrap;\n`;\n\nexport const StyledLink = styled(Link)<{ activeRoute?: boolean }>`\n  ${fonts.s14.regular};\n  display: block;\n  padding-bottom: 12px;\n  border-bottom:\n    ${({ activeRoute }) => (activeRoute ? '4px' : '1px')} solid\n    ${({ activeRoute }) => (activeRoute ? Colors.HighlighterYellow : rgba(Colors.Black, 0))};\n  color: ${({ activeRoute }) => (activeRoute ? Colors.Black : Colors.DarkGreyMedium)};\n  ${({ activeRoute }) => activeRoute && 'font-weight: bold;'}\n  transition: color 0.15s ease, border 0.15s ease;\n  line-height: 1.5;\n\n  &:hover {\n    color: ${Colors.Black};\n    border-bottom: 4px solid ${Colors.HighlighterYellow};\n  }\n`;\n","import * as React from 'react';\nimport { Location } from '@reach/router';\nimport { Teams } from 'utils/types';\nimport { convertNameToSlug } from 'utils/helpers';\n\nimport { Nav, List, Item, StyledLink } from './styles';\n\nconst ROOT = '/';\n\nconst Navbar = () => (\n  <Location>\n    {({ location }) => (\n        <Nav>\n        <List>\n          <Item>\n            <StyledLink to=\"/\" activeRoute={location.pathname === ROOT}>\n              All Projects\n            </StyledLink>\n          </Item>\n          {Object.keys(Teams).map((team) => {\n            const teamSlug = convertNameToSlug(team);\n            return (\n              <Item key={team}>\n                <StyledLink to={`/${teamSlug}`} activeRoute={location.pathname === `/${teamSlug}`}>\n                  {team}\n                </StyledLink>\n              </Item>\n            );\n          })}\n        </List>\n      </Nav>\n    )}\n  </Location>\n);\n\nexport default Navbar;\n","import styled from 'react-emotion';\nimport fonts from 'style/fonts';\nimport { Colors } from 'style/variables/palette';\nimport { below } from 'style/mixins/breakpoints';\nimport { tablet } from 'style/variables/breakpoints';\n\nexport const ExternalLink = styled.a<{ isFeatured?: boolean }>`\n  display: flex;\n  background: ${Colors.White};\n  transition: border 0.2s ease;\n  ${({ isFeatured }) => (isFeatured ? 'grid-column: 1 / 3;' : '')}\n  border: 8px solid ${Colors.LightGrey};\n\n  &:hover {\n    border: 8px solid ${Colors.HighlighterYellow};\n  }\n\n  ${below(tablet)} {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  padding: 32px;\n  min-height: 296px;\n`;\n\nexport const Image = styled.img`\n  width: 300px;\n  height: 100%;\n  margin-top: -8px;\n\n  ${below(tablet)} {\n    display: none;\n  }\n`;\n\nexport const Content = styled.div`\n  ${fonts.s32.regular};\n`;\n\nexport const Details = styled.div`\n  ${fonts.s11.bold};\n  text-transform: uppercase;\n  color: ${Colors.DarkGreyMedium};\n  letter-spacing: normal;\n`;\n\nexport const Language = styled.span<{ color: string }>`\n  color: ${({ color }) => color};\n`;\n\nexport const Team = styled.span``;\n\nexport const Spacer = styled.span`\n  padding: 0 4px;\n`;\n\nexport const Title = styled.h3`\n  ${fonts.s32.bold};\n  margin-bottom: 16px;\n  margin-top: 16px;\n`;\n\nexport const Description = styled.p`\n  ${fonts.s18.regular};\n  margin: 0;\n  line-height: 1.56;\n  color: ${Colors.DarkGreyMedium};\n`;\n","import * as React from 'react';\nimport { Project as ProjectType } from 'utils/types';\n\nimport {\n  ExternalLink,\n  Wrapper,\n  Image,\n  Content,\n  Details,\n  Language,\n  Team,\n  Spacer,\n  Title,\n  Description,\n} from './styles';\n\nconst Project = ({\n  isFeatured,\n  language,\n  team,\n  title,\n  description,\n  img,\n  website,\n  github,\n}: ProjectType) => {\n  const link = website || github;\n  return (\n    <ExternalLink href={link} isFeatured={isFeatured}>\n      <Wrapper>\n        <Content>\n          <Details>\n            <Language color={language.color}>{language.name}</Language>{' '}\n            <Spacer>&middot;</Spacer>{' '}\n            <Team>{team}</Team>\n          </Details>\n          <Title>{title}</Title>\n          <Description>{description}</Description>\n        </Content>\n      </Wrapper>\n      {isFeatured && img && <Image src={img} alt={title} />}\n    </ExternalLink>\n  );\n};\n\nexport default Project;\n","import styled from 'react-emotion';\nimport { below } from 'style/mixins/breakpoints';\nimport { tablet, desktop } from 'style/variables/breakpoints';\nimport { maxContentWidth } from 'style/mixins/spacing';\nimport spacing from 'style/variables/spacing';\n\nexport const Wrapper = styled.div`\n  min-height: 100vh;\n`;\n\nexport const List = styled.main`\n  ${maxContentWidth}\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-gap: 20px;\n  margin-top: 40px;\n\n  ${below(desktop)} {\n    padding-left: ${spacing.md};\n    padding-right: ${spacing.md};\n    grid-template-columns: 1fr 1fr;\n  }\n\n  ${below(tablet)} {\n    display: block;\n    padding-left: 0;\n    padding-right: 0;\n  }\n`;\n","import * as React from 'react';\nimport Project from 'components/Project';\nimport { Project as ProjectType } from 'utils/types';\n\nimport { Wrapper, List } from './styles';\n\ninterface Props {\n  projects: ProjectType[];\n}\n\nconst ProjectList = ({ projects }: Props) => (\n  <Wrapper>\n    <List>\n      {projects.map(p => <Project key={p.title} {...p} />)}\n    </List>\n  </Wrapper>\n);\n\nexport default ProjectList;\n","import styled from 'react-emotion';\nimport { below } from 'style/mixins/breakpoints';\nimport { tablet } from 'style/variables/breakpoints';\n\nexport const PageContainer = styled.div`\n  margin: 0 auto;\n  padding-top: 64px;\n  padding-bottom: 128px;\n\n  ${below(tablet)} {\n    padding-top: 32px;\n  }\n`;\n","import * as React from 'react';\nimport { withRouteData } from 'react-static';\nimport PageMeta from 'components/PageMeta';\nimport Header from 'components/Header';\nimport Navbar from 'components/Navbar';\nimport ProjectList from 'components/ProjectList';\nimport { Project as ProjectType } from 'utils/types';\n\nimport { PageContainer } from 'style/elements';\n\ninterface Props {\n  projects: ProjectType[];\n  title: string;\n  description: string;\n  url: string;\n  siteRoot: string;\n}\n\nconst ProjectPage = ({ projects = [], title, description, url, siteRoot }: Props) => (\n  <PageContainer>\n    <PageMeta title={title} description={description} url={url} siteRoot={siteRoot} />\n    <Header />\n    <Navbar />\n    <ProjectList projects={projects} />\n  </PageContainer>\n);\n\nexport default withRouteData(ProjectPage);\n"],"sourceRoot":""}